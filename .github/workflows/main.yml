name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set permissions for gradlew
        run: chmod +x ./gradlew  # Set the permissions for the Gradle Wrapper script

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build your application Docker image
        run: |
          # Build the Docker image using the specified Dockerfile name
          docker build -t your-app-image -f Dockerfile.dockerfile .
          docker build -t your-app-image -f Dockerfile .

      - name: Run your application
        run: |
          # Start the application in the background
          docker run -d --name your-app -p 7979:7979 your-app-image

      - name: Wait for your application to start
        run: |
          echo "Waiting 10 seconds for the application to be ready..."
          sleep 10

      - name: Run Assessment Docker Image
        run: |
          # Start the Docker image mrksdh/assessment
          docker run -d --name assessment -p 8080:8080 mrksdh/assessment

      - name: Wait for assessment to be ready
        run: |
          echo "Waiting 10 seconds for the assessment to be ready..."
          sleep 10

      - name: Test your application against assessment
        run: |
          # Test your application by interacting with the assessment image
          response_post=$(curl -s -X POST http://localhost:8080/v1/result -d '{}')
          if [[ "$response_post" == *"expecting to see 75 customers but found 0"* ]]; then
            echo "Assessment Test failed: $response_post"
            exit 1
          fi

      - name: Shut down your application
        run: |
          docker stop your-app && docker rm your-app

      - name: Shut down the assessment container
        run: |
          docker stop assessment && docker rm assessment
